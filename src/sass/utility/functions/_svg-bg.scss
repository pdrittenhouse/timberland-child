@use "utilities";
@use "sass:math";

// SVG as background image with data URI
// Example Usage
// .button {
//   background-image: svg-url('<svg viewBox="0 0 230 230"><path fill="#00f" d="M153.4,161c-2,0-4-0.8-5.5-2.3L115,125.8l-32.9,32.9c-1.5,1.5-3.4,2.3-5.5,2.3s-4-0.8-5.5-2.3c-1.4-1.4-2.2-3.3-2.2-5.3 c0-2,0.8-3.9,2.2-5.3l33-33L71.3,82.1c-1.4-1.4-2.2-3.3-2.2-5.4s0.8-4,2.2-5.4c1.4-1.4,3.3-2.2,5.4-2.2s4,0.8,5.4,2.2l32.9,32.9 l33-33c1.4-1.4,3.3-2.2,5.4-2.2s4,0.8,5.4,2.2c1.4,1.4,2.2,3.3,2.2,5.4s-0.8,4-2.2,5.4l-33,33l33,32.9c1.4,1.4,2.2,3.3,2.2,5.4 s-0.8,4-2.2,5.4C157.3,160.2,155.4,161,153.4,161z"/></svg>');
// }
// @link https://codepen.io/Kinaly/pen/OMNQpY
// @link https://codepen.io/jakob-e/pen/doMoML
@function svg-url($svg){
  //
  //  Chunk up string in order to avoid
  //  "stack level too deep" error
  //
  $encoded:'';
  $slice: 2000;
  $index: 0;
  $loops: ceil( math.div(str-length($svg), $slice) );
  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    //
    //   Encode (may need a few extra replacements)
    //
    $chunk: str-replace($chunk,'"','\'');
    $chunk: str-replace($chunk,'<','%3C');
    $chunk: str-replace($chunk,'>','%3E');
    $chunk: str-replace($chunk,'&','%26');
    $chunk: str-replace($chunk,'#','%23');
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }
  @return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

// custom mixin to replace a defined fill color with another one
@function svg-url-with-replaced-fill($svg, $fill-to-replace, $new-fill) {
  $replaced-svg: str-replace($svg, $fill-to-replace, $new-fill);
  $replaced-svg-url: svg-url('#{$replaced-svg}');
  @return $replaced-svg-url;
}
